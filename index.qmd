---
title: "Rewrite_BourgneufBay_2025"
author: "Simon Oiry"
editor_options: 
  chunk_output_type: console
---

# Field trip organisation

The summer field campaign in Bourgneuf Bay took place on September 11th, 2025, at the Barbâtre meadow. Low tide occurred at 14:20 local time, with a tidal range of 4.75 m. We arrived on site around 11:00. Two distinct sampling areas were selected based on the historical consistency of meadow density over the past 40 years. One area, where the meadow has consistently shown more than 50% seagrass cover every year for the last 40 years, was selected (Zone H), as well as an area where meadow cover has been highly inconsistent over the same period (Zone L). In each zone, 30 cores were collected, covering a gradient of seagrass cover from low (SPC < 20%) to high (SPC > 80%). Each core was 20 cm deep to harvest seagrass leaves, rhizomes, and associated fauna.

Only in Zone H, before coring, a hyperspectral signature of the sample was taken using an ASD Fieldspec HandHeld 2. The instrument was calibrated in the field for reflectance acquisition using a Spectralon with a 99% reflective Lambertian surface (No radiance measurment has been done).

What has been done in each area ?

Zone L : 
  - Photo quadrat
  - Coring
  - Above and Bellow ground biomass (Dry weight)
  - Bivalves Diversity and Density
  - Sediment Sampling

Zone H : 
  - Photo quadrat
  - Coring
  - Above and Bellow ground biomass (Dry weight)
  - Bivalves Diversity and Density
  - Carbon Estimation
  - Hyperspectral measurments
  - Sediment Sampling



# Above Ground vs Below Ground biomass

```{r Plot above vs below}
#| label: fig-Above_Below
#| fig-cap: Relationship between the above and below ground biomass
#| echo: false
#| error: false
#| message: false
#| warning: false
#| out-width: "95%"

library(ggplot2)
library(ggiraph)
library(dplyr)
library(scales)
library(tidyverse)

Core_Diameter <- 15 ### diameter of the core used for sampling (in cm)

core_area <- pi*((Core_Diameter/2)^2) #### Area of the core

correction_factor <- (100*100)/core_area #### Correction factor to convert the dry weight to g/m²

dryweight <- readxl::read_xlsx("data/DryWeight_Cores.xlsx") %>% 
  mutate(A = A*correction_factor,
         B = B*correction_factor, 
         Area = substr(Station,1,1))### Convert the dryweight to be in g/m²

p <- ggplot(
  dryweight,
  aes(x = A, y = B)
) +
  geom_smooth(method = "lm", se = TRUE, alpha = 0.1, linewidth = 1,
    color = "black") +
  geom_point_interactive(
    aes(color = Area,
      tooltip = paste0(
        "Sample: ", Station, "\n",
        "Above ground: ", number(A, accuracy = 0.01), " g/m²\n",
        "Below ground: ", number(B, accuracy = 0.001), " g/m²\n"
      )
    ),
    alpha = 0.7, size = 2
  ) +
  scale_color_manual(values = c(
    "H" = "#E69F00",   # Orange
    "L" = "#0072B2"    # Blue
  ))+
  labs(
    x = "Above ground biomass (g/m²)",
    y = "Below ground biomass  (g/m²)",
    color = "Area"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = c(0.02, 0.98),
    legend.justification = c(0, 1),
    legend.background = element_rect(fill = scales::alpha("white", 0.6), color = "grey80"),
    legend.title = element_text(size = 13),
    legend.text  = element_text(size = 12),
    axis.title   = element_text(size = 14, face = "bold"),
    axis.text    = element_text(size = 12),
    panel.grid.minor = element_blank()
  )

girafe(
  ggobj = p,
  width_svg = 7, height_svg = 5,
  options = list(
    opts_tooltip(opacity = .95),
    opts_hover(css = "r:4pt; stroke-width: 2;")
  )
)

```


# Hyperspectral signature zone H

```{r Plot NDVI dryweight}
#| label: fig-hyperspectral
#| fig-cap: Relationship between the NDVI and the Dryweight of seagrasses measured in area H 
#| echo: false
#| error: false
#| message: false
#| warning: false
#| out-width: "95%"

library(ggplot2)
library(ggiraph)
library(dplyr)
library(scales)
library(tidyverse)

wl_red <- 670 ### Red Wavelength for NDVI computation
wl_nir <- 800 ### IR wavelength for NDVi computation

Core_Diameter <- 15 ### diameter of the core used for sampling (in cm)

core_area <- pi*((Core_Diameter/2)^2) #### Area of the core

correction_factor <- (100*100)/core_area #### Correction factor to convert the dry weight to g/m²

df_sp <- read.delim("data/spectra/20250911_Bourgneuf_H_stations_reflectance.txt") %>% 
  pivot_longer(-Wavelength, names_to = "spectra", values_to = "ref") %>% 
  mutate(spectra = substr(spectra, 1,3)) %>% 
  group_by(Wavelength, spectra) %>% 
  reframe(ref_mean = mean(ref, na.rm = T),
          sd = sd(ref)) %>% 
  ungroup() %>% 
  mutate(spectra = gsub("H","H_",spectra))


#### NDVI
ndvi <- df_sp %>%             
  arrange(spectra, Wavelength) %>%
  group_by(spectra) %>%
  summarise(
    red = approx(Wavelength, ref_mean, xout = wl_red, rule = 2)$y,
    nir = approx(Wavelength, ref_mean, xout = wl_nir, rule = 2)$y,
    NDVI = (nir - red) / (nir + red),
    .groups = "drop"
  )

dryweight <- readxl::read_xlsx("data/DryWeight_Cores.xlsx") %>% 
  mutate(A = A*correction_factor,
         B = B*correction_factor) ### Convert the dryweight to be in g/m²

ndvi_dryweight <- ndvi %>% 
 left_join(dryweight, by = c("spectra" = "Station"))

ndvi_long <- ndvi_dryweight %>%
  pivot_longer(cols = c(A, B), names_to = "Compartment", values_to = "DryWeight") %>%
  mutate(Compartment = recode(Compartment,
                              A = "Above Ground",
                              B = "Below Ground"))


p <- ggplot(
  ndvi_long,
  aes(x = DryWeight, y = NDVI, color = Compartment, fill = Compartment)
) +
  geom_smooth(method = "lm", se = TRUE, alpha = 0.1, linewidth = 1) +
  geom_point_interactive(
    aes(
      tooltip = paste0(
        "Sample: ", spectra, "\n",
        "Dry Weight: ", number(DryWeight, accuracy = 0.01), " g/m²\n",
        "NDVI: ", number(NDVI, accuracy = 0.001), "\n",
        "Compartment: ", Compartment
      )
    ),
    alpha = 0.7, size = 2
  ) +
  scale_color_brewer(palette = "Set1") +
  scale_fill_brewer(palette = "Set1") +
  labs(
    x = "Dry Weight (g/m²)",
    y = "NDVI",
    color = "Compartment",
    fill  = "Compartment"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = c(0.02, 0.98),            # << inside the panel
    legend.justification = c(0, 1),
    legend.background = element_rect(fill = scales::alpha("white", 0.6), color = "grey80"),
    legend.title = element_text(size = 13),
    legend.text  = element_text(size = 12),
    axis.title   = element_text(size = 14, face = "bold"),
    axis.text    = element_text(size = 12),
    panel.grid.minor = element_blank()
  )

girafe(
  ggobj = p,
  width_svg = 7, height_svg = 5,
  options = list(
    opts_tooltip(opacity = .95),
    opts_hover(css = "r:4pt; stroke-width: 2;")
  )
)

```



# Map

```{r leafletmap}
#| fig-cap: Map of Bourgneuf Bay Sampling site
#| echo: false
#| error: false
#| message: false
#| warning: false
#| out-width: "95%"

library(tidyverse)
library(leaflet)
library(sf)
library(leafem)
library(leaflet.extras2)
library(terra)

# folder structure: ./www/imgs/...
img_list <- list.files("data/imgs", recursive = TRUE, full.names = TRUE, pattern = "\\.jpg$") %>%
  tibble(path = .) %>%
  mutate(filename = basename(path),
         station  = substr(filename, 1, 4),
         url      = paste0("../",file.path("data/imgs", filename)))

Points <- sf::st_read("data/shp/Core_Location/Points.shp", quiet = TRUE) %>%
  left_join(img_list, by = c("Name" = "station")) %>%
  filter(!is.na(url))

leaflet() %>%
  setView(lng = -2.176695, lat = 46.962474, zoom = 15) %>%
  addProviderTiles(providers$Esri.WorldImagery, group = "Imagery",
                   options = providerTileOptions(minZoom = 8, maxZoom = 20)) %>%
  addCircleMarkers(
    data = Points, radius = 2, color = "lightgreen", fillColor = "lightgreen", fillOpacity = 0.8,
    group = "Coring stations",
    popup = ~sprintf("<img src='%s' width='400'/>", url),
    popupOptions = popupOptions(
    maxWidth  = 450,    # Maximum width of the popup
    minWidth  = 100,    # Minimum width of the popup
    maxHeight = 600)
  ) %>%
  addLayersControl(overlayGroups = "Coring stations",
                   options = layersControlOptions(collapsed = FALSE))


# htmlwidgets::saveWidget(plot_S2, file="maps/map_Bathy_Quiberon.html", selfcontained = F)

```

